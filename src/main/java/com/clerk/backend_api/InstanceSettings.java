/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestlessOperation;
import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.ChangeProductionInstanceDomainRequestBody;
import com.clerk.backend_api.models.operations.ChangeProductionInstanceDomainRequestBuilder;
import com.clerk.backend_api.models.operations.ChangeProductionInstanceDomainResponse;
import com.clerk.backend_api.models.operations.GetInstanceRequestBuilder;
import com.clerk.backend_api.models.operations.GetInstanceResponse;
import com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsRequestBody;
import com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsResponse;
import com.clerk.backend_api.models.operations.UpdateInstanceRequestBody;
import com.clerk.backend_api.models.operations.UpdateInstanceRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateInstanceResponse;
import com.clerk.backend_api.models.operations.UpdateInstanceRestrictionsRequestBody;
import com.clerk.backend_api.models.operations.UpdateInstanceRestrictionsRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateInstanceRestrictionsResponse;
import com.clerk.backend_api.operations.ChangeProductionInstanceDomain;
import com.clerk.backend_api.operations.GetInstance;
import com.clerk.backend_api.operations.UpdateInstance;
import com.clerk.backend_api.operations.UpdateInstanceOrganizationSettings;
import com.clerk.backend_api.operations.UpdateInstanceRestrictions;
import com.clerk.backend_api.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class InstanceSettings {
    private final SDKConfiguration sdkConfiguration;

    InstanceSettings(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Fetch the current instance
     * 
     * <p>Fetches the current instance
     * 
     * @return The call builder
     */
    public GetInstanceRequestBuilder get() {
        return new GetInstanceRequestBuilder(sdkConfiguration);
    }

    /**
     * Fetch the current instance
     * 
     * <p>Fetches the current instance
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetInstanceResponse getDirect() throws Exception {
        return get(Optional.empty());
    }

    /**
     * Fetch the current instance
     * 
     * <p>Fetches the current instance
     * 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetInstanceResponse get(Optional<Options> options) throws Exception {
        RequestlessOperation<GetInstanceResponse> operation
            = new GetInstance.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @return The call builder
     */
    public UpdateInstanceRequestBuilder update() {
        return new UpdateInstanceRequestBuilder(sdkConfiguration);
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceResponse updateDirect() throws Exception {
        return update(Optional.empty(), Optional.empty());
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceResponse update(Optional<? extends UpdateInstanceRequestBody> request, Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends UpdateInstanceRequestBody>, UpdateInstanceResponse> operation
              = new UpdateInstance.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update instance restrictions
     * 
     * <p>Updates the restriction settings of an instance
     * 
     * @return The call builder
     */
    public UpdateInstanceRestrictionsRequestBuilder updateRestrictions() {
        return new UpdateInstanceRestrictionsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update instance restrictions
     * 
     * <p>Updates the restriction settings of an instance
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceRestrictionsResponse updateRestrictionsDirect() throws Exception {
        return updateRestrictions(Optional.empty(), Optional.empty());
    }

    /**
     * Update instance restrictions
     * 
     * <p>Updates the restriction settings of an instance
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceRestrictionsResponse updateRestrictions(Optional<? extends UpdateInstanceRestrictionsRequestBody> request, Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends UpdateInstanceRestrictionsRequestBody>, UpdateInstanceRestrictionsResponse> operation
              = new UpdateInstanceRestrictions.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @return The call builder
     */
    public ChangeProductionInstanceDomainRequestBuilder changeDomain() {
        return new ChangeProductionInstanceDomainRequestBuilder(sdkConfiguration);
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ChangeProductionInstanceDomainResponse changeDomainDirect() throws Exception {
        return changeDomain(Optional.empty(), Optional.empty());
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ChangeProductionInstanceDomainResponse changeDomain(Optional<? extends ChangeProductionInstanceDomainRequestBody> request, Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends ChangeProductionInstanceDomainRequestBody>, ChangeProductionInstanceDomainResponse> operation
              = new ChangeProductionInstanceDomain.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update instance organization settings
     * 
     * <p>Updates the organization settings of the instance
     * 
     * @return The call builder
     */
    public UpdateInstanceOrganizationSettingsRequestBuilder updateOrganizationSettings() {
        return new UpdateInstanceOrganizationSettingsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update instance organization settings
     * 
     * <p>Updates the organization settings of the instance
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceOrganizationSettingsResponse updateOrganizationSettingsDirect() throws Exception {
        return updateOrganizationSettings(Optional.empty(), Optional.empty());
    }

    /**
     * Update instance organization settings
     * 
     * <p>Updates the organization settings of the instance
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateInstanceOrganizationSettingsResponse updateOrganizationSettings(Optional<? extends UpdateInstanceOrganizationSettingsRequestBody> request, Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends UpdateInstanceOrganizationSettingsRequestBody>, UpdateInstanceOrganizationSettingsResponse> operation
              = new UpdateInstanceOrganizationSettings.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
