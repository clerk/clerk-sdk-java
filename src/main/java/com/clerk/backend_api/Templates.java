/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.PreviewTemplateRequest;
import com.clerk.backend_api.models.operations.PreviewTemplateRequestBody;
import com.clerk.backend_api.models.operations.PreviewTemplateRequestBuilder;
import com.clerk.backend_api.models.operations.PreviewTemplateResponse;
import com.clerk.backend_api.operations.PreviewTemplate;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;


public class Templates {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    Templates(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Preview changes to a template
     * 
     * <p>Returns a preview of a template for a given template_type, slug and body
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public PreviewTemplateRequestBuilder preview() {
        return new PreviewTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Preview changes to a template
     * 
     * <p>Returns a preview of a template for a given template_type, slug and body
     * 
     * @param templateType The type of template to preview
     * @param slug The slug of the template to preview
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public PreviewTemplateResponse preview(String templateType, String slug) {
        return preview(templateType, slug, Optional.empty(),
            Optional.empty());
    }

    /**
     * Preview changes to a template
     * 
     * <p>Returns a preview of a template for a given template_type, slug and body
     * 
     * @param templateType The type of template to preview
     * @param slug The slug of the template to preview
     * @param requestBody Required parameters
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public PreviewTemplateResponse preview(
            String templateType, String slug,
            Optional<? extends PreviewTemplateRequestBody> requestBody, Optional<Options> options) {
        PreviewTemplateRequest request =
            PreviewTemplateRequest
                .builder()
                .templateType(templateType)
                .slug(slug)
                .requestBody(requestBody)
                .build();
        RequestOperation<PreviewTemplateRequest, PreviewTemplateResponse> operation
              = new PreviewTemplate.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
