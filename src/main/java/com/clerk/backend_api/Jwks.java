/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestlessOperation;

import com.clerk.backend_api.models.operations.GetJWKSRequestBuilder;
import com.clerk.backend_api.models.operations.GetJWKSResponse;
import com.clerk.backend_api.operations.GetJWKS;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import java.util.Optional;


public class Jwks {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    Jwks(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Retrieve the JSON Web Key Set of the instance
     * 
     * <p>Retrieve the JSON Web Key Set of the instance
     * 
     * @return The call builder
     */
    public GetJWKSRequestBuilder getJWKS() {
        return new GetJWKSRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve the JSON Web Key Set of the instance
     * 
     * <p>Retrieve the JSON Web Key Set of the instance
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetJWKSResponse getJWKSDirect() {
        return getJWKS(Optional.empty());
    }

    /**
     * Retrieve the JSON Web Key Set of the instance
     * 
     * <p>Retrieve the JSON Web Key Set of the instance
     * 
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetJWKSResponse getJWKS(Optional<Options> options) {
        RequestlessOperation<GetJWKSResponse> operation
            = new GetJWKS.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest());
    }

}
