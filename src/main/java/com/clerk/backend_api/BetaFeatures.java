/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.UpdateInstanceAuthConfigRequestBody;
import com.clerk.backend_api.models.operations.UpdateInstanceAuthConfigRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateInstanceAuthConfigResponse;
import com.clerk.backend_api.models.operations.UpdateProductionInstanceDomainRequestBody;
import com.clerk.backend_api.models.operations.UpdateProductionInstanceDomainRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateProductionInstanceDomainResponse;
import com.clerk.backend_api.operations.UpdateInstanceAuthConfig;
import com.clerk.backend_api.operations.UpdateProductionInstanceDomain;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import java.lang.Deprecated;
import java.util.Optional;


public class BetaFeatures {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    BetaFeatures(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @return The call builder
     */
    public UpdateInstanceAuthConfigRequestBuilder updateInstanceSettings() {
        return new UpdateInstanceAuthConfigRequestBuilder(sdkConfiguration);
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateInstanceAuthConfigResponse updateInstanceSettingsDirect() {
        return updateInstanceSettings(Optional.empty(), Optional.empty());
    }

    /**
     * Update instance settings
     * 
     * <p>Updates the settings of an instance
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateInstanceAuthConfigResponse updateInstanceSettings(Optional<? extends UpdateInstanceAuthConfigRequestBody> request, Optional<Options> options) {
        RequestOperation<Optional<? extends UpdateInstanceAuthConfigRequestBody>, UpdateInstanceAuthConfigResponse> operation
              = new UpdateInstanceAuthConfig.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS
     * records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL
     * certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social
     * Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged
     * out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public UpdateProductionInstanceDomainRequestBuilder updateProductionInstanceDomain() {
        return new UpdateProductionInstanceDomainRequestBuilder(sdkConfiguration);
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS
     * records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL
     * certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social
     * Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged
     * out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public UpdateProductionInstanceDomainResponse updateProductionInstanceDomainDirect() {
        return updateProductionInstanceDomain(Optional.empty(), Optional.empty());
    }

    /**
     * Update production instance domain
     * 
     * <p>Change the domain of a production instance.
     * 
     * <p>Changing the domain requires updating the [DNS
     * records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL
     * certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social
     * Connection's redirect URLs and setting the new keys in your code.
     * 
     * <p>WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged
     * out). Also, while your application is being deployed, a small downtime is expected to occur.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public UpdateProductionInstanceDomainResponse updateProductionInstanceDomain(Optional<? extends UpdateProductionInstanceDomainRequestBody> request, Optional<Options> options) {
        RequestOperation<Optional<? extends UpdateProductionInstanceDomainRequestBody>, UpdateProductionInstanceDomainResponse> operation
              = new UpdateProductionInstanceDomain.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
