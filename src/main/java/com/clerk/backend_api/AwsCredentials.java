/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.DeleteAWSCredentialRequest;
import com.clerk.backend_api.models.operations.DeleteAWSCredentialRequestBuilder;
import com.clerk.backend_api.models.operations.DeleteAWSCredentialResponse;
import com.clerk.backend_api.models.operations.UpdateAWSCredentialRequest;
import com.clerk.backend_api.models.operations.UpdateAWSCredentialRequestBody;
import com.clerk.backend_api.models.operations.UpdateAWSCredentialRequestBuilder;
import com.clerk.backend_api.models.operations.UpdateAWSCredentialResponse;
import com.clerk.backend_api.operations.DeleteAWSCredential;
import com.clerk.backend_api.operations.UpdateAWSCredential;
import com.clerk.backend_api.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class AwsCredentials {
    private final SDKConfiguration sdkConfiguration;

    AwsCredentials(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Delete an AWS Credential
     * 
     * <p>Delete the AWS Credential with the given ID
     * 
     * @return The call builder
     */
    public DeleteAWSCredentialRequestBuilder delete() {
        return new DeleteAWSCredentialRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete an AWS Credential
     * 
     * <p>Delete the AWS Credential with the given ID
     * 
     * @param id The ID of the AWS Credential to delete
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteAWSCredentialResponse delete(String id) throws Exception {
        return delete(id, Optional.empty());
    }

    /**
     * Delete an AWS Credential
     * 
     * <p>Delete the AWS Credential with the given ID
     * 
     * @param id The ID of the AWS Credential to delete
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteAWSCredentialResponse delete(String id, Optional<Options> options) throws Exception {
        DeleteAWSCredentialRequest request =
            DeleteAWSCredentialRequest
                .builder()
                .id(id)
                .build();
        RequestOperation<DeleteAWSCredentialRequest, DeleteAWSCredentialResponse> operation
              = new DeleteAWSCredential.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update an AWS Credential
     * 
     * <p>Updates an AWS credential.
     * 
     * @return The call builder
     */
    public UpdateAWSCredentialRequestBuilder update() {
        return new UpdateAWSCredentialRequestBuilder(sdkConfiguration);
    }

    /**
     * Update an AWS Credential
     * 
     * <p>Updates an AWS credential.
     * 
     * @param id The ID of the AWS Credential to update
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAWSCredentialResponse update(String id) throws Exception {
        return update(id, Optional.empty(), Optional.empty());
    }

    /**
     * Update an AWS Credential
     * 
     * <p>Updates an AWS credential.
     * 
     * @param id The ID of the AWS Credential to update
     * @param requestBody 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateAWSCredentialResponse update(
            String id, Optional<? extends UpdateAWSCredentialRequestBody> requestBody,
            Optional<Options> options) throws Exception {
        UpdateAWSCredentialRequest request =
            UpdateAWSCredentialRequest
                .builder()
                .id(id)
                .requestBody(requestBody)
                .build();
        RequestOperation<UpdateAWSCredentialRequest, UpdateAWSCredentialResponse> operation
              = new UpdateAWSCredential.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
