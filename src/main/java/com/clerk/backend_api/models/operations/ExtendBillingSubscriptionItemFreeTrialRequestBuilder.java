/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.SDKConfiguration;
import com.clerk.backend_api.models.components.ExtendFreeTrialRequest;
import com.clerk.backend_api.operations.ExtendBillingSubscriptionItemFreeTrial;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import com.clerk.backend_api.utils.RetryConfig;
import com.clerk.backend_api.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class ExtendBillingSubscriptionItemFreeTrialRequestBuilder {

    private String subscriptionItemId;
    private ExtendFreeTrialRequest extendFreeTrialRequest;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public ExtendBillingSubscriptionItemFreeTrialRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public ExtendBillingSubscriptionItemFreeTrialRequestBuilder subscriptionItemId(String subscriptionItemId) {
        Utils.checkNotNull(subscriptionItemId, "subscriptionItemId");
        this.subscriptionItemId = subscriptionItemId;
        return this;
    }

    public ExtendBillingSubscriptionItemFreeTrialRequestBuilder extendFreeTrialRequest(ExtendFreeTrialRequest extendFreeTrialRequest) {
        Utils.checkNotNull(extendFreeTrialRequest, "extendFreeTrialRequest");
        this.extendFreeTrialRequest = extendFreeTrialRequest;
        return this;
    }
                
    public ExtendBillingSubscriptionItemFreeTrialRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public ExtendBillingSubscriptionItemFreeTrialRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private ExtendBillingSubscriptionItemFreeTrialRequest buildRequest() {

        ExtendBillingSubscriptionItemFreeTrialRequest request = new ExtendBillingSubscriptionItemFreeTrialRequest(subscriptionItemId,
            extendFreeTrialRequest);

        return request;
    }

    public ExtendBillingSubscriptionItemFreeTrialResponse call() {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<ExtendBillingSubscriptionItemFreeTrialRequest, ExtendBillingSubscriptionItemFreeTrialResponse> operation
              = new ExtendBillingSubscriptionItemFreeTrial.Sync(sdkConfiguration, options, _headers);
        ExtendBillingSubscriptionItemFreeTrialRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
