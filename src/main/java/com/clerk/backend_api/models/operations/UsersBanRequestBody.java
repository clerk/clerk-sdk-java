/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class UsersBanRequestBody {
    /**
     * Array of user IDs to ban
     */
    @JsonProperty("user_ids")
    private List<String> userIds;

    @JsonCreator
    public UsersBanRequestBody(
            @JsonProperty("user_ids") List<String> userIds) {
        Utils.checkNotNull(userIds, "userIds");
        this.userIds = userIds;
    }

    /**
     * Array of user IDs to ban
     */
    @JsonIgnore
    public List<String> userIds() {
        return userIds;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Array of user IDs to ban
     */
    public UsersBanRequestBody withUserIds(List<String> userIds) {
        Utils.checkNotNull(userIds, "userIds");
        this.userIds = userIds;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UsersBanRequestBody other = (UsersBanRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.userIds, other.userIds);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            userIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UsersBanRequestBody.class,
                "userIds", userIds);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<String> userIds;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Array of user IDs to ban
         */
        public Builder userIds(List<String> userIds) {
            Utils.checkNotNull(userIds, "userIds");
            this.userIds = userIds;
            return this;
        }

        public UsersBanRequestBody build() {

            return new UsersBanRequestBody(
                userIds);
        }

    }
}
