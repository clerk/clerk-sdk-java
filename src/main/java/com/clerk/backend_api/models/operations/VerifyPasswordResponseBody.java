/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * VerifyPasswordResponseBody
 * 
 * <p>The provided password was correct.
 */
public class VerifyPasswordResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verified")
    private Optional<Boolean> verified;

    @JsonCreator
    public VerifyPasswordResponseBody(
            @JsonProperty("verified") Optional<Boolean> verified) {
        Utils.checkNotNull(verified, "verified");
        this.verified = verified;
    }
    
    public VerifyPasswordResponseBody() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<Boolean> verified() {
        return verified;
    }

    public static Builder builder() {
        return new Builder();
    }


    public VerifyPasswordResponseBody withVerified(boolean verified) {
        Utils.checkNotNull(verified, "verified");
        this.verified = Optional.ofNullable(verified);
        return this;
    }


    public VerifyPasswordResponseBody withVerified(Optional<Boolean> verified) {
        Utils.checkNotNull(verified, "verified");
        this.verified = verified;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VerifyPasswordResponseBody other = (VerifyPasswordResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.verified, other.verified);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            verified);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VerifyPasswordResponseBody.class,
                "verified", verified);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<Boolean> verified = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        public Builder verified(boolean verified) {
            Utils.checkNotNull(verified, "verified");
            this.verified = Optional.ofNullable(verified);
            return this;
        }

        public Builder verified(Optional<Boolean> verified) {
            Utils.checkNotNull(verified, "verified");
            this.verified = verified;
            return this;
        }

        public VerifyPasswordResponseBody build() {

            return new VerifyPasswordResponseBody(
                verified);
        }

    }
}
