/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.SDKConfiguration;
import com.clerk.backend_api.operations.CancelCommerceSubscriptionItem;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.LazySingletonValue;
import com.clerk.backend_api.utils.Options;
import com.clerk.backend_api.utils.RetryConfig;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;

public class CancelCommerceSubscriptionItemRequestBuilder {

    private String subscriptionItemId;
    private Optional<Boolean> endNow = Utils.readDefaultOrConstValue(
                            "endNow",
                            "false",
                            new TypeReference<Optional<Boolean>>() {});
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CancelCommerceSubscriptionItemRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CancelCommerceSubscriptionItemRequestBuilder subscriptionItemId(String subscriptionItemId) {
        Utils.checkNotNull(subscriptionItemId, "subscriptionItemId");
        this.subscriptionItemId = subscriptionItemId;
        return this;
    }
                
    public CancelCommerceSubscriptionItemRequestBuilder endNow(boolean endNow) {
        Utils.checkNotNull(endNow, "endNow");
        this.endNow = Optional.of(endNow);
        return this;
    }

    public CancelCommerceSubscriptionItemRequestBuilder endNow(Optional<Boolean> endNow) {
        Utils.checkNotNull(endNow, "endNow");
        this.endNow = endNow;
        return this;
    }
                
    public CancelCommerceSubscriptionItemRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public CancelCommerceSubscriptionItemRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private CancelCommerceSubscriptionItemRequest buildRequest() {
        if (endNow == null) {
            endNow = _SINGLETON_VALUE_EndNow.value();
        }

        CancelCommerceSubscriptionItemRequest request = new CancelCommerceSubscriptionItemRequest(subscriptionItemId,
            endNow);

        return request;
    }

    public CancelCommerceSubscriptionItemResponse call() {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<CancelCommerceSubscriptionItemRequest, CancelCommerceSubscriptionItemResponse> operation
              = new CancelCommerceSubscriptionItem.Sync(sdkConfiguration, options, _headers);
        CancelCommerceSubscriptionItemRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }

    private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_EndNow =
            new LazySingletonValue<>(
                    "endNow",
                    "false",
                    new TypeReference<Optional<Boolean>>() {});
}
