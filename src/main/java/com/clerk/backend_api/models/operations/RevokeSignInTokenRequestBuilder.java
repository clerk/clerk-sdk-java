/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Options;
import com.clerk.backend_api.utils.RetryConfig;
import com.clerk.backend_api.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class RevokeSignInTokenRequestBuilder {

    private String signInTokenId;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallRevokeSignInToken sdk;

    public RevokeSignInTokenRequestBuilder(SDKMethodInterfaces.MethodCallRevokeSignInToken sdk) {
        this.sdk = sdk;
    }

    public RevokeSignInTokenRequestBuilder signInTokenId(String signInTokenId) {
        Utils.checkNotNull(signInTokenId, "signInTokenId");
        this.signInTokenId = signInTokenId;
        return this;
    }
                
    public RevokeSignInTokenRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public RevokeSignInTokenRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public RevokeSignInTokenResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.revoke(
            signInTokenId,
            options);
    }
}
