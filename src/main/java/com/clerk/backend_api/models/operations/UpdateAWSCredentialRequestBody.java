/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdateAWSCredentialRequestBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_key_id")
    private JsonNullable<String> accessKeyId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_pool_ids")
    private Optional<? extends List<String>> userPoolIds;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret_access_key")
    private JsonNullable<String> secretAccessKey;

    @JsonCreator
    public UpdateAWSCredentialRequestBody(
            @JsonProperty("access_key_id") JsonNullable<String> accessKeyId,
            @JsonProperty("user_pool_ids") Optional<? extends List<String>> userPoolIds,
            @JsonProperty("secret_access_key") JsonNullable<String> secretAccessKey) {
        Utils.checkNotNull(accessKeyId, "accessKeyId");
        Utils.checkNotNull(userPoolIds, "userPoolIds");
        Utils.checkNotNull(secretAccessKey, "secretAccessKey");
        this.accessKeyId = accessKeyId;
        this.userPoolIds = userPoolIds;
        this.secretAccessKey = secretAccessKey;
    }
    
    public UpdateAWSCredentialRequestBody() {
        this(JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> accessKeyId() {
        return accessKeyId;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<String>> userPoolIds() {
        return (Optional<List<String>>) userPoolIds;
    }

    @JsonIgnore
    public JsonNullable<String> secretAccessKey() {
        return secretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }


    public UpdateAWSCredentialRequestBody withAccessKeyId(String accessKeyId) {
        Utils.checkNotNull(accessKeyId, "accessKeyId");
        this.accessKeyId = JsonNullable.of(accessKeyId);
        return this;
    }

    public UpdateAWSCredentialRequestBody withAccessKeyId(JsonNullable<String> accessKeyId) {
        Utils.checkNotNull(accessKeyId, "accessKeyId");
        this.accessKeyId = accessKeyId;
        return this;
    }

    public UpdateAWSCredentialRequestBody withUserPoolIds(List<String> userPoolIds) {
        Utils.checkNotNull(userPoolIds, "userPoolIds");
        this.userPoolIds = Optional.ofNullable(userPoolIds);
        return this;
    }


    public UpdateAWSCredentialRequestBody withUserPoolIds(Optional<? extends List<String>> userPoolIds) {
        Utils.checkNotNull(userPoolIds, "userPoolIds");
        this.userPoolIds = userPoolIds;
        return this;
    }

    public UpdateAWSCredentialRequestBody withSecretAccessKey(String secretAccessKey) {
        Utils.checkNotNull(secretAccessKey, "secretAccessKey");
        this.secretAccessKey = JsonNullable.of(secretAccessKey);
        return this;
    }

    public UpdateAWSCredentialRequestBody withSecretAccessKey(JsonNullable<String> secretAccessKey) {
        Utils.checkNotNull(secretAccessKey, "secretAccessKey");
        this.secretAccessKey = secretAccessKey;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateAWSCredentialRequestBody other = (UpdateAWSCredentialRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.accessKeyId, other.accessKeyId) &&
            Utils.enhancedDeepEquals(this.userPoolIds, other.userPoolIds) &&
            Utils.enhancedDeepEquals(this.secretAccessKey, other.secretAccessKey);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accessKeyId, userPoolIds, secretAccessKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateAWSCredentialRequestBody.class,
                "accessKeyId", accessKeyId,
                "userPoolIds", userPoolIds,
                "secretAccessKey", secretAccessKey);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> accessKeyId = JsonNullable.undefined();

        private Optional<? extends List<String>> userPoolIds = Optional.empty();

        private JsonNullable<String> secretAccessKey = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder accessKeyId(String accessKeyId) {
            Utils.checkNotNull(accessKeyId, "accessKeyId");
            this.accessKeyId = JsonNullable.of(accessKeyId);
            return this;
        }

        public Builder accessKeyId(JsonNullable<String> accessKeyId) {
            Utils.checkNotNull(accessKeyId, "accessKeyId");
            this.accessKeyId = accessKeyId;
            return this;
        }


        public Builder userPoolIds(List<String> userPoolIds) {
            Utils.checkNotNull(userPoolIds, "userPoolIds");
            this.userPoolIds = Optional.ofNullable(userPoolIds);
            return this;
        }

        public Builder userPoolIds(Optional<? extends List<String>> userPoolIds) {
            Utils.checkNotNull(userPoolIds, "userPoolIds");
            this.userPoolIds = userPoolIds;
            return this;
        }


        public Builder secretAccessKey(String secretAccessKey) {
            Utils.checkNotNull(secretAccessKey, "secretAccessKey");
            this.secretAccessKey = JsonNullable.of(secretAccessKey);
            return this;
        }

        public Builder secretAccessKey(JsonNullable<String> secretAccessKey) {
            Utils.checkNotNull(secretAccessKey, "secretAccessKey");
            this.secretAccessKey = secretAccessKey;
            return this;
        }

        public UpdateAWSCredentialRequestBody build() {

            return new UpdateAWSCredentialRequestBody(
                accessKeyId, userPoolIds, secretAccessKey);
        }

    }
}
