/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;


import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class RevokeOrganizationInvitationRequestBody {

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requesting_user_id")
    private JsonNullable<String> requestingUserId;

    @JsonCreator
    public RevokeOrganizationInvitationRequestBody(
            @JsonProperty("requesting_user_id") JsonNullable<String> requestingUserId) {
        Utils.checkNotNull(requestingUserId, "requestingUserId");
        this.requestingUserId = requestingUserId;
    }
    
    public RevokeOrganizationInvitationRequestBody() {
        this(JsonNullable.undefined());
    }

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    @JsonIgnore
    public JsonNullable<String> requestingUserId() {
        return requestingUserId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    public RevokeOrganizationInvitationRequestBody withRequestingUserId(String requestingUserId) {
        Utils.checkNotNull(requestingUserId, "requestingUserId");
        this.requestingUserId = JsonNullable.of(requestingUserId);
        return this;
    }

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    public RevokeOrganizationInvitationRequestBody withRequestingUserId(JsonNullable<String> requestingUserId) {
        Utils.checkNotNull(requestingUserId, "requestingUserId");
        this.requestingUserId = requestingUserId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RevokeOrganizationInvitationRequestBody other = (RevokeOrganizationInvitationRequestBody) o;
        return 
            Objects.deepEquals(this.requestingUserId, other.requestingUserId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            requestingUserId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RevokeOrganizationInvitationRequestBody.class,
                "requestingUserId", requestingUserId);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> requestingUserId = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the user that revokes the invitation.
         * Must be an administrator in the organization.
         */
        public Builder requestingUserId(String requestingUserId) {
            Utils.checkNotNull(requestingUserId, "requestingUserId");
            this.requestingUserId = JsonNullable.of(requestingUserId);
            return this;
        }

        /**
         * The ID of the user that revokes the invitation.
         * Must be an administrator in the organization.
         */
        public Builder requestingUserId(JsonNullable<String> requestingUserId) {
            Utils.checkNotNull(requestingUserId, "requestingUserId");
            this.requestingUserId = requestingUserId;
            return this;
        }
        
        public RevokeOrganizationInvitationRequestBody build() {
            return new RevokeOrganizationInvitationRequestBody(
                requestingUserId);
        }
    }
}

