/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;


import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdateOrganizationDomainRequestBody {

    /**
     * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enrollment_mode")
    private JsonNullable<String> enrollmentMode;

    /**
     * The status of the domain's verification
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verified")
    private JsonNullable<Boolean> verified;

    @JsonCreator
    public UpdateOrganizationDomainRequestBody(
            @JsonProperty("enrollment_mode") JsonNullable<String> enrollmentMode,
            @JsonProperty("verified") JsonNullable<Boolean> verified) {
        Utils.checkNotNull(enrollmentMode, "enrollmentMode");
        Utils.checkNotNull(verified, "verified");
        this.enrollmentMode = enrollmentMode;
        this.verified = verified;
    }
    
    public UpdateOrganizationDomainRequestBody() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
     */
    @JsonIgnore
    public JsonNullable<String> enrollmentMode() {
        return enrollmentMode;
    }

    /**
     * The status of the domain's verification
     */
    @JsonIgnore
    public JsonNullable<Boolean> verified() {
        return verified;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
     */
    public UpdateOrganizationDomainRequestBody withEnrollmentMode(String enrollmentMode) {
        Utils.checkNotNull(enrollmentMode, "enrollmentMode");
        this.enrollmentMode = JsonNullable.of(enrollmentMode);
        return this;
    }

    /**
     * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
     */
    public UpdateOrganizationDomainRequestBody withEnrollmentMode(JsonNullable<String> enrollmentMode) {
        Utils.checkNotNull(enrollmentMode, "enrollmentMode");
        this.enrollmentMode = enrollmentMode;
        return this;
    }

    /**
     * The status of the domain's verification
     */
    public UpdateOrganizationDomainRequestBody withVerified(boolean verified) {
        Utils.checkNotNull(verified, "verified");
        this.verified = JsonNullable.of(verified);
        return this;
    }

    /**
     * The status of the domain's verification
     */
    public UpdateOrganizationDomainRequestBody withVerified(JsonNullable<Boolean> verified) {
        Utils.checkNotNull(verified, "verified");
        this.verified = verified;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateOrganizationDomainRequestBody other = (UpdateOrganizationDomainRequestBody) o;
        return 
            Objects.deepEquals(this.enrollmentMode, other.enrollmentMode) &&
            Objects.deepEquals(this.verified, other.verified);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            enrollmentMode,
            verified);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateOrganizationDomainRequestBody.class,
                "enrollmentMode", enrollmentMode,
                "verified", verified);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> enrollmentMode = JsonNullable.undefined();
 
        private JsonNullable<Boolean> verified = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
         */
        public Builder enrollmentMode(String enrollmentMode) {
            Utils.checkNotNull(enrollmentMode, "enrollmentMode");
            this.enrollmentMode = JsonNullable.of(enrollmentMode);
            return this;
        }

        /**
         * The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation`
         */
        public Builder enrollmentMode(JsonNullable<String> enrollmentMode) {
            Utils.checkNotNull(enrollmentMode, "enrollmentMode");
            this.enrollmentMode = enrollmentMode;
            return this;
        }

        /**
         * The status of the domain's verification
         */
        public Builder verified(boolean verified) {
            Utils.checkNotNull(verified, "verified");
            this.verified = JsonNullable.of(verified);
            return this;
        }

        /**
         * The status of the domain's verification
         */
        public Builder verified(JsonNullable<Boolean> verified) {
            Utils.checkNotNull(verified, "verified");
            this.verified = verified;
            return this;
        }
        
        public UpdateOrganizationDomainRequestBody build() {
            return new UpdateOrganizationDomainRequestBody(
                enrollmentMode,
                verified);
        }
    }
}

