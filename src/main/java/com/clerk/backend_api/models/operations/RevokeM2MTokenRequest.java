/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.SpeakeasyMetadata;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;


public class RevokeM2MTokenRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=m2m_token_id")
    private String m2mTokenId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private RevokeM2MTokenRequestBody requestBody;

    @JsonCreator
    public RevokeM2MTokenRequest(
            String m2mTokenId,
            RevokeM2MTokenRequestBody requestBody) {
        Utils.checkNotNull(m2mTokenId, "m2mTokenId");
        Utils.checkNotNull(requestBody, "requestBody");
        this.m2mTokenId = m2mTokenId;
        this.requestBody = requestBody;
    }

    @JsonIgnore
    public String m2mTokenId() {
        return m2mTokenId;
    }

    @JsonIgnore
    public RevokeM2MTokenRequestBody requestBody() {
        return requestBody;
    }

    public static Builder builder() {
        return new Builder();
    }


    public RevokeM2MTokenRequest withM2mTokenId(String m2mTokenId) {
        Utils.checkNotNull(m2mTokenId, "m2mTokenId");
        this.m2mTokenId = m2mTokenId;
        return this;
    }

    public RevokeM2MTokenRequest withRequestBody(RevokeM2MTokenRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RevokeM2MTokenRequest other = (RevokeM2MTokenRequest) o;
        return 
            Utils.enhancedDeepEquals(this.m2mTokenId, other.m2mTokenId) &&
            Utils.enhancedDeepEquals(this.requestBody, other.requestBody);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            m2mTokenId, requestBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RevokeM2MTokenRequest.class,
                "m2mTokenId", m2mTokenId,
                "requestBody", requestBody);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String m2mTokenId;

        private RevokeM2MTokenRequestBody requestBody;

        private Builder() {
          // force use of static builder() method
        }


        public Builder m2mTokenId(String m2mTokenId) {
            Utils.checkNotNull(m2mTokenId, "m2mTokenId");
            this.m2mTokenId = m2mTokenId;
            return this;
        }


        public Builder requestBody(RevokeM2MTokenRequestBody requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }

        public RevokeM2MTokenRequest build() {

            return new RevokeM2MTokenRequest(
                m2mTokenId, requestBody);
        }

    }
}
