/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.models.components.ExtendFreeTrialRequest;
import com.clerk.backend_api.utils.SpeakeasyMetadata;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;


public class ExtendBillingSubscriptionItemFreeTrialRequest {
    /**
     * The ID of the subscription item to extend the free trial for
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=subscription_item_id")
    private String subscriptionItemId;

    /**
     * Parameters for extending the free trial
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    private ExtendFreeTrialRequest extendFreeTrialRequest;

    @JsonCreator
    public ExtendBillingSubscriptionItemFreeTrialRequest(
            String subscriptionItemId,
            ExtendFreeTrialRequest extendFreeTrialRequest) {
        Utils.checkNotNull(subscriptionItemId, "subscriptionItemId");
        Utils.checkNotNull(extendFreeTrialRequest, "extendFreeTrialRequest");
        this.subscriptionItemId = subscriptionItemId;
        this.extendFreeTrialRequest = extendFreeTrialRequest;
    }

    /**
     * The ID of the subscription item to extend the free trial for
     */
    @JsonIgnore
    public String subscriptionItemId() {
        return subscriptionItemId;
    }

    /**
     * Parameters for extending the free trial
     */
    @JsonIgnore
    public ExtendFreeTrialRequest extendFreeTrialRequest() {
        return extendFreeTrialRequest;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the subscription item to extend the free trial for
     */
    public ExtendBillingSubscriptionItemFreeTrialRequest withSubscriptionItemId(String subscriptionItemId) {
        Utils.checkNotNull(subscriptionItemId, "subscriptionItemId");
        this.subscriptionItemId = subscriptionItemId;
        return this;
    }

    /**
     * Parameters for extending the free trial
     */
    public ExtendBillingSubscriptionItemFreeTrialRequest withExtendFreeTrialRequest(ExtendFreeTrialRequest extendFreeTrialRequest) {
        Utils.checkNotNull(extendFreeTrialRequest, "extendFreeTrialRequest");
        this.extendFreeTrialRequest = extendFreeTrialRequest;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExtendBillingSubscriptionItemFreeTrialRequest other = (ExtendBillingSubscriptionItemFreeTrialRequest) o;
        return 
            Utils.enhancedDeepEquals(this.subscriptionItemId, other.subscriptionItemId) &&
            Utils.enhancedDeepEquals(this.extendFreeTrialRequest, other.extendFreeTrialRequest);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            subscriptionItemId, extendFreeTrialRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ExtendBillingSubscriptionItemFreeTrialRequest.class,
                "subscriptionItemId", subscriptionItemId,
                "extendFreeTrialRequest", extendFreeTrialRequest);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String subscriptionItemId;

        private ExtendFreeTrialRequest extendFreeTrialRequest;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The ID of the subscription item to extend the free trial for
         */
        public Builder subscriptionItemId(String subscriptionItemId) {
            Utils.checkNotNull(subscriptionItemId, "subscriptionItemId");
            this.subscriptionItemId = subscriptionItemId;
            return this;
        }


        /**
         * Parameters for extending the free trial
         */
        public Builder extendFreeTrialRequest(ExtendFreeTrialRequest extendFreeTrialRequest) {
            Utils.checkNotNull(extendFreeTrialRequest, "extendFreeTrialRequest");
            this.extendFreeTrialRequest = extendFreeTrialRequest;
            return this;
        }

        public ExtendBillingSubscriptionItemFreeTrialRequest build() {

            return new ExtendBillingSubscriptionItemFreeTrialRequest(
                subscriptionItemId, extendFreeTrialRequest);
        }

    }
}
