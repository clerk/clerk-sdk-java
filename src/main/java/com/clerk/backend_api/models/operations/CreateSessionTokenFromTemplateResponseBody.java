/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

/**
 * CreateSessionTokenFromTemplateResponseBody
 * 
 * <p>OK
 */
public class CreateSessionTokenFromTemplateResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    private Optional<? extends CreateSessionTokenFromTemplateObject> object;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwt")
    private Optional<String> jwt;

    @JsonCreator
    public CreateSessionTokenFromTemplateResponseBody(
            @JsonProperty("object") Optional<? extends CreateSessionTokenFromTemplateObject> object,
            @JsonProperty("jwt") Optional<String> jwt) {
        Utils.checkNotNull(object, "object");
        Utils.checkNotNull(jwt, "jwt");
        this.object = object;
        this.jwt = jwt;
    }
    
    public CreateSessionTokenFromTemplateResponseBody() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateSessionTokenFromTemplateObject> object() {
        return (Optional<CreateSessionTokenFromTemplateObject>) object;
    }

    @JsonIgnore
    public Optional<String> jwt() {
        return jwt;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CreateSessionTokenFromTemplateResponseBody withObject(CreateSessionTokenFromTemplateObject object) {
        Utils.checkNotNull(object, "object");
        this.object = Optional.ofNullable(object);
        return this;
    }

    public CreateSessionTokenFromTemplateResponseBody withObject(Optional<? extends CreateSessionTokenFromTemplateObject> object) {
        Utils.checkNotNull(object, "object");
        this.object = object;
        return this;
    }

    public CreateSessionTokenFromTemplateResponseBody withJwt(String jwt) {
        Utils.checkNotNull(jwt, "jwt");
        this.jwt = Optional.ofNullable(jwt);
        return this;
    }

    public CreateSessionTokenFromTemplateResponseBody withJwt(Optional<String> jwt) {
        Utils.checkNotNull(jwt, "jwt");
        this.jwt = jwt;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateSessionTokenFromTemplateResponseBody other = (CreateSessionTokenFromTemplateResponseBody) o;
        return 
            Objects.deepEquals(this.object, other.object) &&
            Objects.deepEquals(this.jwt, other.jwt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            object,
            jwt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateSessionTokenFromTemplateResponseBody.class,
                "object", object,
                "jwt", jwt);
    }
    
    public final static class Builder {
 
        private Optional<? extends CreateSessionTokenFromTemplateObject> object = Optional.empty();
 
        private Optional<String> jwt = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder object(CreateSessionTokenFromTemplateObject object) {
            Utils.checkNotNull(object, "object");
            this.object = Optional.ofNullable(object);
            return this;
        }

        public Builder object(Optional<? extends CreateSessionTokenFromTemplateObject> object) {
            Utils.checkNotNull(object, "object");
            this.object = object;
            return this;
        }

        public Builder jwt(String jwt) {
            Utils.checkNotNull(jwt, "jwt");
            this.jwt = Optional.ofNullable(jwt);
            return this;
        }

        public Builder jwt(Optional<String> jwt) {
            Utils.checkNotNull(jwt, "jwt");
            this.jwt = jwt;
            return this;
        }
        
        public CreateSessionTokenFromTemplateResponseBody build() {
            return new CreateSessionTokenFromTemplateResponseBody(
                object,
                jwt);
        }
    }
}
