/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.List;

/**
 * GetM2MTokensResponseBody
 * 
 * <p>200 OK
 */
public class GetM2MTokensResponseBody {

    @JsonProperty("m2m_tokens")
    private List<M2mTokens> m2mTokens;


    @JsonProperty("total_count")
    private double totalCount;

    @JsonCreator
    public GetM2MTokensResponseBody(
            @JsonProperty("m2m_tokens") List<M2mTokens> m2mTokens,
            @JsonProperty("total_count") double totalCount) {
        Utils.checkNotNull(m2mTokens, "m2mTokens");
        Utils.checkNotNull(totalCount, "totalCount");
        this.m2mTokens = m2mTokens;
        this.totalCount = totalCount;
    }

    @JsonIgnore
    public List<M2mTokens> m2mTokens() {
        return m2mTokens;
    }

    @JsonIgnore
    public double totalCount() {
        return totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }


    public GetM2MTokensResponseBody withM2mTokens(List<M2mTokens> m2mTokens) {
        Utils.checkNotNull(m2mTokens, "m2mTokens");
        this.m2mTokens = m2mTokens;
        return this;
    }

    public GetM2MTokensResponseBody withTotalCount(double totalCount) {
        Utils.checkNotNull(totalCount, "totalCount");
        this.totalCount = totalCount;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetM2MTokensResponseBody other = (GetM2MTokensResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.m2mTokens, other.m2mTokens) &&
            Utils.enhancedDeepEquals(this.totalCount, other.totalCount);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            m2mTokens, totalCount);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetM2MTokensResponseBody.class,
                "m2mTokens", m2mTokens,
                "totalCount", totalCount);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<M2mTokens> m2mTokens;

        private Double totalCount;

        private Builder() {
          // force use of static builder() method
        }


        public Builder m2mTokens(List<M2mTokens> m2mTokens) {
            Utils.checkNotNull(m2mTokens, "m2mTokens");
            this.m2mTokens = m2mTokens;
            return this;
        }


        public Builder totalCount(double totalCount) {
            Utils.checkNotNull(totalCount, "totalCount");
            this.totalCount = totalCount;
            return this;
        }

        public GetM2MTokensResponseBody build() {

            return new GetM2MTokensResponseBody(
                m2mTokens, totalCount);
        }

    }
}
