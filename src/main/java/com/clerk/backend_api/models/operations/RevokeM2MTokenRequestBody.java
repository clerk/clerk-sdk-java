/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class RevokeM2MTokenRequestBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revocation_reason")
    private JsonNullable<String> revocationReason;

    @JsonCreator
    public RevokeM2MTokenRequestBody(
            @JsonProperty("revocation_reason") JsonNullable<String> revocationReason) {
        Utils.checkNotNull(revocationReason, "revocationReason");
        this.revocationReason = revocationReason;
    }
    
    public RevokeM2MTokenRequestBody() {
        this(JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> revocationReason() {
        return revocationReason;
    }

    public static Builder builder() {
        return new Builder();
    }


    public RevokeM2MTokenRequestBody withRevocationReason(String revocationReason) {
        Utils.checkNotNull(revocationReason, "revocationReason");
        this.revocationReason = JsonNullable.of(revocationReason);
        return this;
    }

    public RevokeM2MTokenRequestBody withRevocationReason(JsonNullable<String> revocationReason) {
        Utils.checkNotNull(revocationReason, "revocationReason");
        this.revocationReason = revocationReason;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RevokeM2MTokenRequestBody other = (RevokeM2MTokenRequestBody) o;
        return 
            Utils.enhancedDeepEquals(this.revocationReason, other.revocationReason);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            revocationReason);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RevokeM2MTokenRequestBody.class,
                "revocationReason", revocationReason);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> revocationReason = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder revocationReason(String revocationReason) {
            Utils.checkNotNull(revocationReason, "revocationReason");
            this.revocationReason = JsonNullable.of(revocationReason);
            return this;
        }

        public Builder revocationReason(JsonNullable<String> revocationReason) {
            Utils.checkNotNull(revocationReason, "revocationReason");
            this.revocationReason = revocationReason;
            return this;
        }

        public RevokeM2MTokenRequestBody build() {

            return new RevokeM2MTokenRequestBody(
                revocationReason);
        }

    }
}
