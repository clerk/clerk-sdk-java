/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api.models.components;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;

/**
 * PaginatedCommercePlanResponse
 * 
 * <p>A list of commerce plans.
 */
public class PaginatedCommercePlanResponse {
    /**
     * Array of commerce plans.
     */
    @JsonProperty("data")
    private List<CommercePlan> data;

    /**
     * Total number of commerce plans.
     */
    @JsonProperty("total_count")
    private long totalCount;

    @JsonCreator
    public PaginatedCommercePlanResponse(
            @JsonProperty("data") List<CommercePlan> data,
            @JsonProperty("total_count") long totalCount) {
        Utils.checkNotNull(data, "data");
        Utils.checkNotNull(totalCount, "totalCount");
        this.data = data;
        this.totalCount = totalCount;
    }

    /**
     * Array of commerce plans.
     */
    @JsonIgnore
    public List<CommercePlan> data() {
        return data;
    }

    /**
     * Total number of commerce plans.
     */
    @JsonIgnore
    public long totalCount() {
        return totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Array of commerce plans.
     */
    public PaginatedCommercePlanResponse withData(List<CommercePlan> data) {
        Utils.checkNotNull(data, "data");
        this.data = data;
        return this;
    }

    /**
     * Total number of commerce plans.
     */
    public PaginatedCommercePlanResponse withTotalCount(long totalCount) {
        Utils.checkNotNull(totalCount, "totalCount");
        this.totalCount = totalCount;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginatedCommercePlanResponse other = (PaginatedCommercePlanResponse) o;
        return 
            Utils.enhancedDeepEquals(this.data, other.data) &&
            Utils.enhancedDeepEquals(this.totalCount, other.totalCount);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            data, totalCount);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaginatedCommercePlanResponse.class,
                "data", data,
                "totalCount", totalCount);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<CommercePlan> data;

        private Long totalCount;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Array of commerce plans.
         */
        public Builder data(List<CommercePlan> data) {
            Utils.checkNotNull(data, "data");
            this.data = data;
            return this;
        }


        /**
         * Total number of commerce plans.
         */
        public Builder totalCount(long totalCount) {
            Utils.checkNotNull(totalCount, "totalCount");
            this.totalCount = totalCount;
            return this;
        }

        public PaginatedCommercePlanResponse build() {

            return new PaginatedCommercePlanResponse(
                data, totalCount);
        }

    }
}
