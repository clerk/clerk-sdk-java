/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.clerk.backend_api.models.components;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class Web3Wallet {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<String> id;

    /**
     * String representing the object's type. Objects of the same type share the same value.
     * 
     */
    @JsonProperty("object")
    private Web3WalletObject object;

    @JsonProperty("web3_wallet")
    private String web3Wallet;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("verification")
    private Optional<? extends Web3WalletVerification> verification;

    /**
     * Unix timestamp of creation
     * 
     */
    @JsonProperty("created_at")
    private long createdAt;

    /**
     * Unix timestamp of creation
     * 
     */
    @JsonProperty("updated_at")
    private long updatedAt;

    @JsonCreator
    public Web3Wallet(
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("object") Web3WalletObject object,
            @JsonProperty("web3_wallet") String web3Wallet,
            @JsonProperty("verification") Optional<? extends Web3WalletVerification> verification,
            @JsonProperty("created_at") long createdAt,
            @JsonProperty("updated_at") long updatedAt) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(object, "object");
        Utils.checkNotNull(web3Wallet, "web3Wallet");
        Utils.checkNotNull(verification, "verification");
        Utils.checkNotNull(createdAt, "createdAt");
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.id = id;
        this.object = object;
        this.web3Wallet = web3Wallet;
        this.verification = verification;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    
    public Web3Wallet(
            Web3WalletObject object,
            String web3Wallet,
            long createdAt,
            long updatedAt) {
        this(Optional.empty(), object, web3Wallet, Optional.empty(), createdAt, updatedAt);
    }

    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     * 
     */
    @JsonIgnore
    public Web3WalletObject object() {
        return object;
    }

    @JsonIgnore
    public String web3Wallet() {
        return web3Wallet;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Web3WalletVerification> verification() {
        return (Optional<Web3WalletVerification>) verification;
    }

    /**
     * Unix timestamp of creation
     * 
     */
    @JsonIgnore
    public long createdAt() {
        return createdAt;
    }

    /**
     * Unix timestamp of creation
     * 
     */
    @JsonIgnore
    public long updatedAt() {
        return updatedAt;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public Web3Wallet withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    public Web3Wallet withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     * 
     */
    public Web3Wallet withObject(Web3WalletObject object) {
        Utils.checkNotNull(object, "object");
        this.object = object;
        return this;
    }

    public Web3Wallet withWeb3Wallet(String web3Wallet) {
        Utils.checkNotNull(web3Wallet, "web3Wallet");
        this.web3Wallet = web3Wallet;
        return this;
    }

    public Web3Wallet withVerification(Web3WalletVerification verification) {
        Utils.checkNotNull(verification, "verification");
        this.verification = Optional.ofNullable(verification);
        return this;
    }

    public Web3Wallet withVerification(Optional<? extends Web3WalletVerification> verification) {
        Utils.checkNotNull(verification, "verification");
        this.verification = verification;
        return this;
    }

    /**
     * Unix timestamp of creation
     * 
     */
    public Web3Wallet withCreatedAt(long createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Unix timestamp of creation
     * 
     */
    public Web3Wallet withUpdatedAt(long updatedAt) {
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.updatedAt = updatedAt;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Web3Wallet other = (Web3Wallet) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.object, other.object) &&
            Objects.deepEquals(this.web3Wallet, other.web3Wallet) &&
            Objects.deepEquals(this.verification, other.verification) &&
            Objects.deepEquals(this.createdAt, other.createdAt) &&
            Objects.deepEquals(this.updatedAt, other.updatedAt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            object,
            web3Wallet,
            verification,
            createdAt,
            updatedAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Web3Wallet.class,
                "id", id,
                "object", object,
                "web3Wallet", web3Wallet,
                "verification", verification,
                "createdAt", createdAt,
                "updatedAt", updatedAt);
    }
    
    public final static class Builder {
 
        private Optional<String> id = Optional.empty();
 
        private Web3WalletObject object;
 
        private String web3Wallet;
 
        private Optional<? extends Web3WalletVerification> verification = Optional.empty();
 
        private Long createdAt;
 
        private Long updatedAt;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * String representing the object's type. Objects of the same type share the same value.
         * 
         */
        public Builder object(Web3WalletObject object) {
            Utils.checkNotNull(object, "object");
            this.object = object;
            return this;
        }

        public Builder web3Wallet(String web3Wallet) {
            Utils.checkNotNull(web3Wallet, "web3Wallet");
            this.web3Wallet = web3Wallet;
            return this;
        }

        public Builder verification(Web3WalletVerification verification) {
            Utils.checkNotNull(verification, "verification");
            this.verification = Optional.ofNullable(verification);
            return this;
        }

        public Builder verification(Optional<? extends Web3WalletVerification> verification) {
            Utils.checkNotNull(verification, "verification");
            this.verification = verification;
            return this;
        }

        /**
         * Unix timestamp of creation
         * 
         */
        public Builder createdAt(long createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Unix timestamp of creation
         * 
         */
        public Builder updatedAt(long updatedAt) {
            Utils.checkNotNull(updatedAt, "updatedAt");
            this.updatedAt = updatedAt;
            return this;
        }
        
        public Web3Wallet build() {
            return new Web3Wallet(
                id,
                object,
                web3Wallet,
                verification,
                createdAt,
                updatedAt);
        }
    }
}

