/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.CreatePhoneNumberRequestBody;
import com.clerk.backend_api.models.operations.CreatePhoneNumberRequestBuilder;
import com.clerk.backend_api.models.operations.CreatePhoneNumberResponse;
import com.clerk.backend_api.models.operations.DeletePhoneNumberRequest;
import com.clerk.backend_api.models.operations.DeletePhoneNumberRequestBuilder;
import com.clerk.backend_api.models.operations.DeletePhoneNumberResponse;
import com.clerk.backend_api.models.operations.GetPhoneNumberRequest;
import com.clerk.backend_api.models.operations.GetPhoneNumberRequestBuilder;
import com.clerk.backend_api.models.operations.GetPhoneNumberResponse;
import com.clerk.backend_api.models.operations.UpdatePhoneNumberRequest;
import com.clerk.backend_api.models.operations.UpdatePhoneNumberRequestBody;
import com.clerk.backend_api.models.operations.UpdatePhoneNumberRequestBuilder;
import com.clerk.backend_api.models.operations.UpdatePhoneNumberResponse;
import com.clerk.backend_api.operations.CreatePhoneNumber;
import com.clerk.backend_api.operations.DeletePhoneNumber;
import com.clerk.backend_api.operations.GetPhoneNumber;
import com.clerk.backend_api.operations.UpdatePhoneNumber;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import java.lang.String;
import java.util.Optional;


public class PhoneNumbers {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    PhoneNumbers(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create a phone number
     * 
     * <p>Create a new phone number
     * 
     * @return The call builder
     */
    public CreatePhoneNumberRequestBuilder create() {
        return new CreatePhoneNumberRequestBuilder(sdkConfiguration);
    }

    /**
     * Create a phone number
     * 
     * <p>Create a new phone number
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreatePhoneNumberResponse createDirect() {
        return create(Optional.empty(), Optional.empty());
    }

    /**
     * Create a phone number
     * 
     * <p>Create a new phone number
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreatePhoneNumberResponse create(Optional<? extends CreatePhoneNumberRequestBody> request, Optional<Options> options) {
        RequestOperation<Optional<? extends CreatePhoneNumberRequestBody>, CreatePhoneNumberResponse> operation
              = new CreatePhoneNumber.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a phone number
     * 
     * <p>Returns the details of a phone number
     * 
     * @return The call builder
     */
    public GetPhoneNumberRequestBuilder get() {
        return new GetPhoneNumberRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a phone number
     * 
     * <p>Returns the details of a phone number
     * 
     * @param phoneNumberId The ID of the phone number to retrieve
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetPhoneNumberResponse get(String phoneNumberId) {
        return get(phoneNumberId, Optional.empty());
    }

    /**
     * Retrieve a phone number
     * 
     * <p>Returns the details of a phone number
     * 
     * @param phoneNumberId The ID of the phone number to retrieve
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetPhoneNumberResponse get(String phoneNumberId, Optional<Options> options) {
        GetPhoneNumberRequest request =
            GetPhoneNumberRequest
                .builder()
                .phoneNumberId(phoneNumberId)
                .build();
        RequestOperation<GetPhoneNumberRequest, GetPhoneNumberResponse> operation
              = new GetPhoneNumber.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete a phone number
     * 
     * <p>Delete the phone number with the given ID
     * 
     * @return The call builder
     */
    public DeletePhoneNumberRequestBuilder delete() {
        return new DeletePhoneNumberRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete a phone number
     * 
     * <p>Delete the phone number with the given ID
     * 
     * @param phoneNumberId The ID of the phone number to delete
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public DeletePhoneNumberResponse delete(String phoneNumberId) {
        return delete(phoneNumberId, Optional.empty());
    }

    /**
     * Delete a phone number
     * 
     * <p>Delete the phone number with the given ID
     * 
     * @param phoneNumberId The ID of the phone number to delete
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public DeletePhoneNumberResponse delete(String phoneNumberId, Optional<Options> options) {
        DeletePhoneNumberRequest request =
            DeletePhoneNumberRequest
                .builder()
                .phoneNumberId(phoneNumberId)
                .build();
        RequestOperation<DeletePhoneNumberRequest, DeletePhoneNumberResponse> operation
              = new DeletePhoneNumber.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update a phone number
     * 
     * <p>Updates a phone number
     * 
     * @return The call builder
     */
    public UpdatePhoneNumberRequestBuilder update() {
        return new UpdatePhoneNumberRequestBuilder(sdkConfiguration);
    }

    /**
     * Update a phone number
     * 
     * <p>Updates a phone number
     * 
     * @param phoneNumberId The ID of the phone number to update
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdatePhoneNumberResponse update(String phoneNumberId) {
        return update(phoneNumberId, Optional.empty(), Optional.empty());
    }

    /**
     * Update a phone number
     * 
     * <p>Updates a phone number
     * 
     * @param phoneNumberId The ID of the phone number to update
     * @param requestBody 
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdatePhoneNumberResponse update(
            String phoneNumberId, Optional<? extends UpdatePhoneNumberRequestBody> requestBody,
            Optional<Options> options) {
        UpdatePhoneNumberRequest request =
            UpdatePhoneNumberRequest
                .builder()
                .phoneNumberId(phoneNumberId)
                .requestBody(requestBody)
                .build();
        RequestOperation<UpdatePhoneNumberRequest, UpdatePhoneNumberResponse> operation
              = new UpdatePhoneNumber.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
