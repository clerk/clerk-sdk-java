/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestlessOperation;

import com.clerk.backend_api.models.operations.CreateTestingTokenRequestBuilder;
import com.clerk.backend_api.models.operations.CreateTestingTokenResponse;
import com.clerk.backend_api.operations.CreateTestingToken;
import com.clerk.backend_api.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class TestingTokens {
    private final SDKConfiguration sdkConfiguration;

    TestingTokens(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Retrieve a new testing token
     * 
     * <p>Retrieve a new testing token.
     * 
     * @return The call builder
     */
    public CreateTestingTokenRequestBuilder create() {
        return new CreateTestingTokenRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a new testing token
     * 
     * <p>Retrieve a new testing token.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTestingTokenResponse createDirect() throws Exception {
        return create(Optional.empty());
    }

    /**
     * Retrieve a new testing token
     * 
     * <p>Retrieve a new testing token.
     * 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateTestingTokenResponse create(Optional<Options> options) throws Exception {
        RequestlessOperation<CreateTestingTokenResponse> operation
            = new CreateTestingToken.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest());
    }

}
