/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.clerk.backend_api;

import static com.clerk.backend_api.operations.Operations.RequestOperation;

import com.clerk.backend_api.models.operations.GetTemplateListRequest;
import com.clerk.backend_api.models.operations.GetTemplateListRequestBuilder;
import com.clerk.backend_api.models.operations.GetTemplateListResponse;
import com.clerk.backend_api.models.operations.GetTemplateRequest;
import com.clerk.backend_api.models.operations.GetTemplateRequestBuilder;
import com.clerk.backend_api.models.operations.GetTemplateResponse;
import com.clerk.backend_api.models.operations.PathParamTemplateType;
import com.clerk.backend_api.models.operations.RevertTemplatePathParamTemplateType;
import com.clerk.backend_api.models.operations.RevertTemplateRequest;
import com.clerk.backend_api.models.operations.RevertTemplateRequestBuilder;
import com.clerk.backend_api.models.operations.RevertTemplateResponse;
import com.clerk.backend_api.models.operations.TemplateType;
import com.clerk.backend_api.models.operations.ToggleTemplateDeliveryPathParamTemplateType;
import com.clerk.backend_api.models.operations.ToggleTemplateDeliveryRequest;
import com.clerk.backend_api.models.operations.ToggleTemplateDeliveryRequestBody;
import com.clerk.backend_api.models.operations.ToggleTemplateDeliveryRequestBuilder;
import com.clerk.backend_api.models.operations.ToggleTemplateDeliveryResponse;
import com.clerk.backend_api.operations.GetTemplate;
import com.clerk.backend_api.operations.GetTemplateList;
import com.clerk.backend_api.operations.RevertTemplate;
import com.clerk.backend_api.operations.ToggleTemplateDelivery;
import com.clerk.backend_api.utils.Headers;
import com.clerk.backend_api.utils.Options;
import java.lang.Boolean;
import java.lang.Deprecated;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;


public class EmailSMSTemplates {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    EmailSMSTemplates(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List all templates
     * 
     * <p>Returns a list of all templates.
     * The templates are returned sorted by position.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateListRequestBuilder list() {
        return new GetTemplateListRequestBuilder(sdkConfiguration);
    }

    /**
     * List all templates
     * 
     * <p>Returns a list of all templates.
     * The templates are returned sorted by position.
     * 
     * @param templateType The type of templates to list (email or SMS)
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateListResponse list(TemplateType templateType) {
        return list(templateType, Optional.empty(), Optional.empty(),
            Optional.empty(), Optional.empty());
    }

    /**
     * List all templates
     * 
     * <p>Returns a list of all templates.
     * The templates are returned sorted by position.
     * 
     * @param templateType The type of templates to list (email or SMS)
     * @param paginated Whether to paginate the results.
     *         If true, the results will be paginated.
     *         If false, the results will not be paginated.
     * @param limit Applies a limit to the number of results returned.
     *         Can be used for paginating the results together with `offset`.
     * @param offset Skip the first `offset` results when paginating.
     *         Needs to be an integer greater or equal to zero.
     *         To be used in conjunction with `limit`.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateListResponse list(
            TemplateType templateType, Optional<Boolean> paginated,
            Optional<Long> limit, Optional<Long> offset,
            Optional<Options> options) {
        GetTemplateListRequest request =
            GetTemplateListRequest
                .builder()
                .templateType(templateType)
                .paginated(paginated)
                .limit(limit)
                .offset(offset)
                .build();
        RequestOperation<GetTemplateListRequest, GetTemplateListResponse> operation
              = new GetTemplateList.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Retrieve a template
     * 
     * <p>Returns the details of a template
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateRequestBuilder get() {
        return new GetTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Retrieve a template
     * 
     * <p>Returns the details of a template
     * 
     * @param templateType The type of templates to retrieve (email or SMS)
     * @param slug The slug (i.e. machine-friendly name) of the template to retrieve
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateResponse get(PathParamTemplateType templateType, String slug) {
        return get(templateType, slug, Optional.empty());
    }

    /**
     * Retrieve a template
     * 
     * <p>Returns the details of a template
     * 
     * @param templateType The type of templates to retrieve (email or SMS)
     * @param slug The slug (i.e. machine-friendly name) of the template to retrieve
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetTemplateResponse get(
            PathParamTemplateType templateType, String slug,
            Optional<Options> options) {
        GetTemplateRequest request =
            GetTemplateRequest
                .builder()
                .templateType(templateType)
                .slug(slug)
                .build();
        RequestOperation<GetTemplateRequest, GetTemplateResponse> operation
              = new GetTemplate.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Revert a template
     * 
     * <p>Reverts an updated template to its default state
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RevertTemplateRequestBuilder revert() {
        return new RevertTemplateRequestBuilder(sdkConfiguration);
    }

    /**
     * Revert a template
     * 
     * <p>Reverts an updated template to its default state
     * 
     * @param templateType The type of template to revert
     * @param slug The slug of the template to revert
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RevertTemplateResponse revert(RevertTemplatePathParamTemplateType templateType, String slug) {
        return revert(templateType, slug, Optional.empty());
    }

    /**
     * Revert a template
     * 
     * <p>Reverts an updated template to its default state
     * 
     * @param templateType The type of template to revert
     * @param slug The slug of the template to revert
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RevertTemplateResponse revert(
            RevertTemplatePathParamTemplateType templateType, String slug,
            Optional<Options> options) {
        RevertTemplateRequest request =
            RevertTemplateRequest
                .builder()
                .templateType(templateType)
                .slug(slug)
                .build();
        RequestOperation<RevertTemplateRequest, RevertTemplateResponse> operation
              = new RevertTemplate.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Toggle the delivery by Clerk for a template of a given type and slug
     * 
     * <p>Toggles the delivery by Clerk for a template of a given type and slug.
     * If disabled, Clerk will not deliver the resulting email or SMS.
     * The app developer will need to listen to the `email.created` or `sms.created` webhooks in order to
     * handle delivery themselves.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ToggleTemplateDeliveryRequestBuilder toggleTemplateDelivery() {
        return new ToggleTemplateDeliveryRequestBuilder(sdkConfiguration);
    }

    /**
     * Toggle the delivery by Clerk for a template of a given type and slug
     * 
     * <p>Toggles the delivery by Clerk for a template of a given type and slug.
     * If disabled, Clerk will not deliver the resulting email or SMS.
     * The app developer will need to listen to the `email.created` or `sms.created` webhooks in order to
     * handle delivery themselves.
     * 
     * @param templateType The type of template to toggle delivery for
     * @param slug The slug of the template for which to toggle delivery
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ToggleTemplateDeliveryResponse toggleTemplateDelivery(ToggleTemplateDeliveryPathParamTemplateType templateType, String slug) {
        return toggleTemplateDelivery(templateType, slug, Optional.empty(),
            Optional.empty());
    }

    /**
     * Toggle the delivery by Clerk for a template of a given type and slug
     * 
     * <p>Toggles the delivery by Clerk for a template of a given type and slug.
     * If disabled, Clerk will not deliver the resulting email or SMS.
     * The app developer will need to listen to the `email.created` or `sms.created` webhooks in order to
     * handle delivery themselves.
     * 
     * @param templateType The type of template to toggle delivery for
     * @param slug The slug of the template for which to toggle delivery
     * @param requestBody 
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ToggleTemplateDeliveryResponse toggleTemplateDelivery(
            ToggleTemplateDeliveryPathParamTemplateType templateType, String slug,
            Optional<? extends ToggleTemplateDeliveryRequestBody> requestBody, Optional<Options> options) {
        ToggleTemplateDeliveryRequest request =
            ToggleTemplateDeliveryRequest
                .builder()
                .templateType(templateType)
                .slug(slug)
                .requestBody(requestBody)
                .build();
        RequestOperation<ToggleTemplateDeliveryRequest, ToggleTemplateDeliveryResponse> operation
              = new ToggleTemplateDelivery.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
