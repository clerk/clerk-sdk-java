////////////////////////////////////////////////////////////////////////////////////////////
// This file is generated by Speakeasy and any edits will be lost in generation updates.
//
// If you wish to customize this file then place those customizations in `build-extras.gradle` which 
// is not touched by generation updates.
//
// Additions to the plugins block can be made by setting the `additionalPlugins` property (an array 
// of string where each string value is an additional line in the block) in gen.yaml.
////////////////////////////////////////////////////////////////////////////////////////////


plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    // V2 publishing plugin (Sonatype Central Portal)
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.3'
    id "io.spring.dependency-management" version "1.1.6" apply false
}

compileJava.options.encoding = "UTF-8"
compileJava.options.compilerArgs += '-Xlint:unchecked'
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

version = "${version}"
group = "${groupId}"

jar {
    dependsOn 'generatePomFileForMavenPublication'
    archiveBaseName = "${artifactId}"

    into("META-INF/maven/com.clerk/backend-api") {
        from(layout.buildDirectory.file("pom.xml")) {
            // Only include if it exists to avoid build ordering issues
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
        }
    }
}

javadoc {
    options.encoding = "UTF-8"

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.withType(Javadoc).configureEach {
  failOnError = false
  options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.withType(JavaCompile).configureEach {
    options.release = 11
}

sourcesJar {
    archiveBaseName = "${artifactId}"
}

javadocJar {
    archiveBaseName = "${artifactId}"
}

dependencies {
    api 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.18.2'
    api('org.openapitools:jackson-databind-nullable:0.2.6') {exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'}
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
}

ext {
    springBootVersion = '2.7.18'
}

subprojects {
    if (name in [
            'backend-api-spring-boot-autoconfigure',
            'backend-api-spring-boot-starter'
    ]) {
        // Ensure subprojects use the same group and version as root project
        group = rootProject.group
        version = rootProject.version

        apply {
            plugin "java-library"
            plugin "io.spring.dependency-management"
            plugin "maven-publish"
            plugin "signing"
            plugin "cl.franciscosolis.sonatype-central-upload"
        }
        dependencyManagement {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:${rootProject.springBootVersion}"
            }
        }
        repositories {
            mavenCentral()
        }
        java {
            withSourcesJar()
            withJavadocJar()
        }
        tasks.withType(JavaCompile).configureEach {
            options.release = 11
        }

        // Apply publishing configuration to all subprojects - they'll check for publishingConfig internally
        apply from: rootProject.file('publishing.gradle')
    }
}

ext {
    publishingConfig = [
        groupId: group,
        artifactId: artifactId,
        version: version,
        name: "My Company Java SDK",
        description: "SDK enabling Java developers to easily integrate with the My Company API.",
        publicationName: "maven"
    ]
}

apply from: 'publishing.gradle'

apply from: 'build-extras.gradle'